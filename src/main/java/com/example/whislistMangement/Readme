Background:
You've been hired as a backend intern at a startup that specializes in e-commerce solutions.
The company is developing a new feature for its platform that allows users to create and manage their product wishlists.
Your task is to design and implement the backend functionality for wishlist management.
Task:
Requirements:
•	User Authentication:
•	Implement user authentication using Spring Security.
•	Allow users to sign up and log in to the system securely.
•	Wishlist Management:
•	Design and implement RESTful API endpoints for wishlist management:
•	/api/wishlists: GET endpoint to retrieve a user's wishlist.
•	/api/wishlists: POST endpoint to create a new wishlist item.
•	/api/wishlists/{id}: DELETE endpoint to remove a wishlist item by ID.
•	Ensure that only authenticated users can access and manage their wishlists.
•	Database Integration:
•	Integrate the application with a relational database using Spring Data JPA.
•	Design the database schema to store user information and wishlist items.
•	Implement repository interfaces for CRUD operations on wishlist entities.
•	Unit Testing:
•	Write unit tests to validate the functionality of wishlist-related components, including controllers, services, and repositories.
•	Aim for adequate test coverage to ensure the reliability of the application.
•	Documentation:
•	Provide clear documentation on how to set up and run the application locally.
•	Include instructions for running the unit tests and any additional considerations for deployment.
Evaluation Criteria:
•	Code Quality: Assess the clarity, readability, and organisation of the code.
•	Functionality: Evaluate whether the implemented features meet the specified requirements.
•	Database Design: Review the efficiency and correctness of the database schema.
•	Testing: Assess the completeness and effectiveness of the unit tests.
•	Documentation: Evaluate the clarity and completeness of the provided documentation.
Submission Guidelines:
•	GitHub Repository: Submit your solution as a GitHub repository.
•	Instructions: Include clear instructions on how to set up, run, and test the application.
•	Assumptions: Document any assumptions made during the implementation process.
•	Comments: Ensure that your code is well-commented to explain its functionality and any complex logic.
Note:
This case study test focuses on a specific feature (wishlist management) to assess the candidate's ability to design and
implement backend functionality using Java and Spring Boot. It requires practical knowledge of web development, database
integration, and testing practices.
